version: '3.8'

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
  certs:

services:
  postgresql:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: toggle_system
      POSTGRES_USER: bianca
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./00_schema.sql:/docker-entrypoint-initdb.d/00_schema.sql
      - ./01_init-db.sql:/docker-entrypoint-initdb.d/01_init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bianca -d toggle_system"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  backend:
    build:
      context: ./api
    container_name: backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/toggle_system
      SPRING_DATASOURCE_USERNAME: bianca
      SPRING_DATASOURCE_PASSWORD: 1234
      SERVER_SSL_ENABLED: "true"
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin123
      MINIO_BUCKET_NAME: my-bucket
    ports:
      - "8443:8443"
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "443:443"
    depends_on:
      - backend
    networks:
      - app_network

  minio:
    image: quay.io/minio/minio
    container_name: minio
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin123
      MINIO_BROWSER: "on"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: minio server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 2s
      retries: 5
    networks:
      - app_network

  minio-init:
    image: quay.io/minio/mc
    container_name: minio-init
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin123
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - app_network
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        until (/usr/bin/mc alias set myminio http://minio:9000 admin admin123 --insecure); do
          echo "Aștept MinIO...";
          sleep 2;
        done;
        if ! (/usr/bin/mc ls myminio/public-bucket --insecure); then
          /usr/bin/mc mb myminio/public-bucket --insecure;
          /usr/bin/mc anonymous set public myminio/public-bucket --insecure;
        else
          echo "Bucketul public-bucket deja există.";
        fi
